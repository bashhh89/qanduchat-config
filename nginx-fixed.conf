server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Security headers
    add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob: https://*.codesandbox.io http://localhost:* ws://localhost:* https://api.openai.com https://api.anthropic.com https://text.pollinations.ai https://fonts.googleapis.com https://fonts.gstatic.com;
                                      frame-src 'self' https://*.codesandbox.io http://localhost:* https://sandpack-bundler:* http://sandpack-bundler:* http://localhost:8080 ws://localhost:8080;
                                      connect-src 'self' https://*.codesandbox.io http://localhost:* ws://localhost:* https://api.openai.com https://api.anthropic.com https://text.pollinations.ai ws://sandpack-bundler:* http://sandpack-bundler:* http://localhost:8080 ws://localhost:8080;
                                      img-src 'self' data: blob: https://*.codesandbox.io http://localhost:* https://sandpack-bundler:* http://sandpack-bundler:* http://localhost:8080;
                                      script-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.codesandbox.io http://localhost:* https://sandpack-bundler:* http://sandpack-bundler:* http://localhost:8080;
                                      style-src 'self' 'unsafe-inline' https://*.codesandbox.io http://localhost:* https://sandpack-bundler:* http://sandpack-bundler:* http://localhost:8080 https://fonts.googleapis.com;
                                      font-src 'self' https://fonts.gstatic.com;
                                      worker-src 'self' blob: *;";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    
    # CORS headers
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
    add_header 'Access-Control-Allow-Headers' 'X-Requested-With,Accept,Content-Type, Origin' always;

    # Error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # WebSocket timeout settings
    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;

    # Landing page
    location = / {
        root /usr/share/nginx/html/landing;
        index index.html;
    }

    location /assets/ {
        alias /usr/share/nginx/html/landing/assets/;
    }

    # Static assets for the chat interface (JS, CSS files)
    location ~* \.(js|css|json|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webmanifest)$ {
        proxy_pass http://api:3080;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        expires 1d;
        add_header Cache-Control "public";
    }

    # Chat interface
    location /chat {
        proxy_pass http://api:3080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
    }

    location /api {
        proxy_pass http://api:3080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
    }

    location /bundler/ {
        proxy_pass http://sandpack-bundler:80/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_buffering off;
        
        # Additional headers for WebSocket support
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers for bundler
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'X-Requested-With,Accept,Content-Type, Origin' always;
    }

    location /sandpack/ {
        proxy_pass http://sandpack-bundler:80/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_buffering off;
        
        # Additional headers for WebSocket support
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers for sandpack
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'X-Requested-With,Accept,Content-Type, Origin' always;
    }

    # Fallback to LibreChat for any other requests
    location / {
        proxy_pass http://api:3080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
    }
} 